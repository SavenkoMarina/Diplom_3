{"name": "Выход из системы", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: Element <p class=\"AppHeader_header__linkText__3q_va ml-2\"> is not clickable at point (1192,44) because another element <div class=\"Modal_modal_overlay__x2ZCr\"> obscures it\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:197:5\nElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:342:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:177:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:136:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:344:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:220:31", "trace": "self = <tests.test_account.TestAccountPage object at 0x7f6b9f5b9880>\ndriver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"f2b46a08-e682-4a83-bbfe-da83163d3180\")>\nuser = {'email': 'diswe@ya.ru', 'name': 'luqubrhcnz', 'password': 'qpghyzuz'}\n\n    @title(\"Выход из системы\")\n    def test_logout(self, driver, user):\n        login_page = LoginPage(driver)\n        login_page.login(user[\"email\"], user[\"password\"])\n    \n>       page = AccountPage(driver)\n\ntests/test_account.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/account_page.py:13: in __init__\n    page.click_to_account()\npages/main_page.py:18: in click_to_account\n    self.click_element(MainPageLocators.ACCOUNT_LINK)\npages/base_page.py:34: in click_element\n    return self.driver.find_element(*locator).click()\n.venv/lib/python3.8/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n.venv/lib/python3.8/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n.venv/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f6b9f3f6fa0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"Element <p class=\\\\\"AppHeader_heade...ys.mjs:344:29\\\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:220:31\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: Element <p class=\"AppHeader_header__linkText__3q_va ml-2\"> is not clickable at point (1192,44) because another element <div class=\"Modal_modal_overlay__x2ZCr\"> obscures it\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:197:5\nE       ElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:342:5\nE       webdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:177:11\nE       interaction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:136:11\nE       clickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:344:29\nE       receiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:220:31\n\n.venv/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py:232: ElementClickInterceptedException"}, "steps": [{"name": "Логин пользователя", "status": "passed", "parameters": [{"name": "email", "value": "'diswe@ya.ru'"}, {"name": "password", "value": "'qpghyzuz'"}], "start": 1746969515247, "stop": 1746969515805}, {"name": "Перейти в личный кабинет", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: Element <p class=\"AppHeader_header__linkText__3q_va ml-2\"> is not clickable at point (1192,44) because another element <div class=\"Modal_modal_overlay__x2ZCr\"> obscures it\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:197:5\nElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:342:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:177:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:136:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:344:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:220:31\n\n", "trace": "  File \"/home/marina/PycharmProjects/Diplom_3/.venv/lib/python3.8/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/home/marina/PycharmProjects/Diplom_3/pages/main_page.py\", line 18, in click_to_account\n    self.click_element(MainPageLocators.ACCOUNT_LINK)\n  File \"/home/marina/PycharmProjects/Diplom_3/pages/base_page.py\", line 34, in click_element\n    return self.driver.find_element(*locator).click()\n  File \"/home/marina/PycharmProjects/Diplom_3/.venv/lib/python3.8/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/home/marina/PycharmProjects/Diplom_3/.venv/lib/python3.8/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n  File \"/home/marina/PycharmProjects/Diplom_3/.venv/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py\", line 384, in execute\n    self.error_handler.check_response(response)\n  File \"/home/marina/PycharmProjects/Diplom_3/.venv/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1746969516272, "stop": 1746969516335}], "attachments": [{"name": "log", "source": "6a02d7ca-933a-458a-b76f-30cfdf5a5b1d-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "driver", "value": "'firefox'"}], "start": 1746969513726, "stop": 1746969516337, "uuid": "db6a8a8b-675d-4718-b168-c781c2b84b46", "historyId": "db54b5da489ae7471777f7a134a85029", "testCaseId": "2cca3ae28b53a999689e443a995b1b76", "fullName": "tests.test_account.TestAccountPage#test_logout", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_account"}, {"name": "subSuite", "value": "TestAccountPage"}, {"name": "host", "value": "ws"}, {"name": "thread", "value": "1038636-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_account"}]}