{"name": "Проверка создания заказа", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x560990feaffa <unknown>\n#1 0x560990aa9970 <unknown>\n#2 0x560990afb385 <unknown>\n#3 0x560990afb5b1 <unknown>\n#4 0x560990b4a3c4 <unknown>\n#5 0x560990b212bd <unknown>\n#6 0x560990b4770c <unknown>\n#7 0x560990b21063 <unknown>\n#8 0x560990aed328 <unknown>\n#9 0x560990aee491 <unknown>\n#10 0x560990fb242b <unknown>\n#11 0x560990fb62ec <unknown>\n#12 0x560990f99a22 <unknown>\n#13 0x560990fb6e64 <unknown>\n#14 0x560990f7dbef <unknown>\n#15 0x560990fd9558 <unknown>\n#16 0x560990fd9736 <unknown>\n#17 0x560990fe9e76 <unknown>\n#18 0x7f06477d8609 start_thread", "trace": "self = <tests.test_base.TestBaseFunctionality object at 0x7f6b9f546b80>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cf1d6a6706e72e140dc712c30a3bc80e\")>\nuser = {'email': 'xvhdz@ya.ru', 'name': 'xpirgetiyx', 'password': 'rkdvwvya'}\n\n    @title(\"Проверка создания заказа\")\n    def test_create_order(self, driver, user):\n        login_page = LoginPage(driver)\n        login_page.login(user[\"email\"], user[\"password\"])\n    \n        page = MainPage(driver)\n        page.add_buns_to_order()\n        page.make_order()\n>       assert page.is_order_accepted()\n\ntests/test_base.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:60: in is_order_accepted\n    self.wait_for_load_element(MainPageLocators.ORDER_READY_DIV)\npages/base_page.py:15: in wait_for_load_element\n    WebDriverWait(self.driver,TIMEOUT).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"cf1d6a6706e72e140dc712c30a3bc80e\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7f6b9f437670>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x560990feaffa <unknown>\nE       #1 0x560990aa9970 <unknown>\nE       #2 0x560990afb385 <unknown>\nE       #3 0x560990afb5b1 <unknown>\nE       #4 0x560990b4a3c4 <unknown>\nE       #5 0x560990b212bd <unknown>\nE       #6 0x560990b4770c <unknown>\nE       #7 0x560990b21063 <unknown>\nE       #8 0x560990aed328 <unknown>\nE       #9 0x560990aee491 <unknown>\nE       #10 0x560990fb242b <unknown>\nE       #11 0x560990fb62ec <unknown>\nE       #12 0x560990f99a22 <unknown>\nE       #13 0x560990fb6e64 <unknown>\nE       #14 0x560990f7dbef <unknown>\nE       #15 0x560990fd9558 <unknown>\nE       #16 0x560990fd9736 <unknown>\nE       #17 0x560990fe9e76 <unknown>\nE       #18 0x7f06477d8609 start_thread\n\n.venv/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "steps": [{"name": "Логин пользователя", "status": "passed", "parameters": [{"name": "email", "value": "'xvhdz@ya.ru'"}, {"name": "password", "value": "'rkdvwvya'"}], "start": 1746969584436, "stop": 1746969585322}, {"name": "Добавление булочки в заказ", "status": "passed", "start": 1746969585662, "stop": 1746969586304}, {"name": "Оформить заказ", "status": "passed", "start": 1746969586305, "stop": 1746969586402}], "parameters": [{"name": "driver", "value": "'chrome'"}], "start": 1746969583192, "stop": 1746969596904, "uuid": "dc7b35b0-8d21-4cdc-88e5-c65eb4621894", "historyId": "fbaf3eeeca0f57524dbeae925039caed", "testCaseId": "55d709ef773bc2332d238b069b8c5015", "fullName": "tests.test_base.TestBaseFunctionality#test_create_order", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_base"}, {"name": "subSuite", "value": "TestBaseFunctionality"}, {"name": "host", "value": "ws"}, {"name": "thread", "value": "1038636-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_base"}]}